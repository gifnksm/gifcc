version: 2.1
orbs:
  codecov: codecov/codecov@1.0.4
jobs:
  build-docker-image:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t gifnksm/gifcc-build:archlinux -f misc/Dockerfile.archlinux misc
      - run: docker push gifnksm/gifcc-build:archlinux

  stage1-build:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make stage1
      - save_cache:
          key: stage1-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
            - src/include_path.h
  stage1-release-build:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make stage1 RELEASE=1
      - save_cache:
          key: stage1-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
            - src/include_path.h
  stage2-build:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage1-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: make stage2
      - save_cache:
          key: stage2-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
            - target/stage2
            - src/include_path.h
  stage3-build:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage2-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: make stage3
      - save_cache:
          key: stage3-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
            - target/stage2
            - target/stage3
            - src/include_path.h

  gcc-test:
    docker:
        - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make gcc-test-full
      - store_test_results:
          path: target/test-results
  stage1-test:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage1-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: GIFCC_TIME=0 make stage1-test-full
      - store_test_results:
          path: target/test-results
      - save_cache:
          key: stage1-test-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
  stage1-release-test:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage1-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: GIFCC_TIME=0 make stage1-test-full RELEASE=1
      - store_test_results:
          path: target/test-results
      - save_cache:
          key: stage1-release-test-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage1
  stage2-test:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage2-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: GIFCC_TIME=0 make stage2-test-full
      - store_test_results:
          path: target/test-results
      - save_cache:
          key: stage2-test-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage2
  stage3-test:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage3-{{ .Environment.CIRCLE_SHA1 }}
      - run: touch target/stage*/*
      - run: GIFCC_TIME=0 make stage3-test-full
      - store_test_results:
          path: target/test-results
      - save_cache:
          key: stage3-test-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - target/stage3

  compare-stage1-stage2:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage1-test-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: stage2-test-{{ .Environment.CIRCLE_SHA1 }}
      - run: ./scripts/diff_asm stage1 stage2

  compare-stage1-release-stage2:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage1-release-test-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: stage2-test-{{ .Environment.CIRCLE_SHA1 }}
      - run: ./scripts/diff_asm stage1 stage2

  compare-stage2-stage3:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - restore_cache:
          key: stage2-test-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: stage3-test-{{ .Environment.CIRCLE_SHA1 }}
      - run: ./scripts/diff_asm stage2 stage3

  asan:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make stage1 stage1-test-full stage2 ASAN=1
  coverage:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make stage1 stage1-test-full stage2 COVERAGE=1
      - run: make lcov
      - codecov/upload
  clang-format:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make format
      - run: git diff --exit-code
  clang-tidy:
    docker:
      - image: gifnksm/gifcc-build:archlinux
    steps:
      - checkout
      - run: make clang-tidy
      - run: git diff --exit-code

workflows:
  version: 2
  commit:
    jobs:
      - stage1-build
      - stage1-release-build
      - stage2-build:
          requires:
            - stage1-build
      - stage3-build:
          requires:
            - stage2-build
      - gcc-test
      - stage1-test:
          requires:
            - stage1-build
      - stage1-release-test:
          requires:
            - stage1-release-build
      - stage2-test:
          requires:
            - stage2-build
      - stage3-test:
          requires:
            - stage3-build
      - compare-stage1-stage2:
          requires:
            - stage1-test
            - stage2-test
      - compare-stage1-release-stage2:
          requires:
            - stage1-release-test
            - stage2-test
      - compare-stage2-stage3:
          requires:
            - stage2-test
            - stage3-test
      - asan
      - coverage
      - clang-format
      - clang-tidy

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-docker-image
