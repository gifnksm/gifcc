#!/bin/bash -eu

STAGE=$1
CURDIR=$(readlink -f $(dirname $0))
REPOROOT=$(readlink -f ${CURDIR}/..)
PATH="$(readlink -f ${REPOROOT}/target/${STAGE}):${PATH}"

case "${STAGE}" in
    gcc)
        COMPILER=gcc-x86_64
        ;;
    stage*)
        COMPILER=gifcc-x86_64
        ;;
    *)
        echo "unknown stage: ${STAGE}" >&2
        exit 1
esac

export OUTDIR="$(readlink -f ${REPOROOT}/target/${STAGE}/c-testsuite)"
mkdir -p "${OUTDIR}"

cd ${REPOROOT}
git submodule update --init

cd ${REPOROOT}/external/c-testsuite
if ! [ -d ./.tmsu ]; then
    ./scripts/make-search-index
fi

cp ${REPOROOT}/scripts/gifcc-x86_64 ${REPOROOT}/external/c-testsuite/runners/single-exec/
OUTPUT="${REPOROOT}/target/${STAGE}/c-testsuite/result.tap"
./single-exec "${COMPILER}" | tee ${OUTPUT} | grep --line-buffered -v '^#' | sed 's/^/['${STAGE}'] /'

PASS="$(grep '^ok' ${OUTPUT} | grep -v '# SKIP' | wc -l)"
FAIL="$(grep '^not ok' ${OUTPUT} | wc -l)"
SKIP="$(grep '^ok' ${OUTPUT} | grep '# SKIP' | wc -l)"
TOTAL=$((PASS + FAIL + SKIP))

echo   "[${STAGE}]"
printf "[${STAGE}] pass  %5d\n" ${PASS}
printf "[${STAGE}] fail  %5d\n" ${FAIL}
printf "[${STAGE}] skip  %5d\n" ${SKIP}
echo   "[${STAGE}] -----------"
printf "[${STAGE}] total %5d\n" ${TOTAL}

mkdir -p ${REPOROOT}/target/test-results/${STAGE}-c-testsuite
tap-xunit < ${OUTPUT} > ${REPOROOT}/target/test-results/${STAGE}-c-testsuite/results.xml || true
